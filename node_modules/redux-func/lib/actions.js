'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.makeActionGroup = makeActionGroup;
exports.makeAjaxAction = makeAjaxAction;
exports.makeTxAction = makeTxAction;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ActionGroup = function () {
  function ActionGroup(name) {
    _classCallCheck(this, ActionGroup);

    this._name = name;
    var prefix = this._name + '.';

    for (var _len = arguments.length, ops = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      ops[_key - 1] = arguments[_key];
    }

    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = ops[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var op = _step.value;

        this[op] = prefix + op;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  }

  _createClass(ActionGroup, [{
    key: 'clone',
    value: function clone() {
      return Object.assign(new ActionGroup(this._name), this);
    }
  }, {
    key: 'extend',
    value: function extend() {
      for (var _len2 = arguments.length, ops = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        ops[_key2] = arguments[_key2];
      }

      if (ops.length === 0) {
        return this;
      }
      var cloned = this.clone();
      var prefix = this._name + '.';
      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = ops[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var op = _step2.value;

          cloned[op] = prefix + op;
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      return cloned;
    }
  }, {
    key: 'bind',
    value: function bind(params) {
      if (params) {
        var cloned = this.clone();
        for (var key in params) {
          if (params.hasOwnProperty(key)) {
            cloned[key] = params[key];
          }
        }
        return cloned;
      } else {
        return this;
      }
    }
  }]);

  return ActionGroup;
}();

function makeActionGroup(name) {
  for (var _len3 = arguments.length, ops = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
    ops[_key3 - 1] = arguments[_key3];
  }

  return new (Function.prototype.bind.apply(ActionGroup, [null].concat([name], ops)))();
}

var QUERY = exports.QUERY = 'QUERY';
var SUCCESS = exports.SUCCESS = 'SUCCESS';
var ERROR = exports.ERROR = 'ERROR';
function makeAjaxAction(name) {
  for (var _len4 = arguments.length, ops = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
    ops[_key4 - 1] = arguments[_key4];
  }

  return new (Function.prototype.bind.apply(ActionGroup, [null].concat([name, QUERY, SUCCESS, ERROR], ops)))();
}

var BEGIN = exports.BEGIN = 'BEGIN';
var UPDATE = exports.UPDATE = 'UPDATE';
var COMMIT = exports.COMMIT = 'COMMIT';
var CANCEL = exports.CANCEL = 'CANCEL';
function makeTxAction(name) {
  for (var _len5 = arguments.length, ops = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
    ops[_key5 - 1] = arguments[_key5];
  }

  return new (Function.prototype.bind.apply(ActionGroup, [null].concat([name, BEGIN, UPDATE, COMMIT, CANCEL], ops)))();
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjdGlvbnMuanMiXSwibmFtZXMiOlsibWFrZUFjdGlvbkdyb3VwIiwibWFrZUFqYXhBY3Rpb24iLCJtYWtlVHhBY3Rpb24iLCJBY3Rpb25Hcm91cCIsIm5hbWUiLCJfbmFtZSIsInByZWZpeCIsIm9wcyIsIm9wIiwiT2JqZWN0IiwiYXNzaWduIiwibGVuZ3RoIiwiY2xvbmVkIiwiY2xvbmUiLCJwYXJhbXMiLCJrZXkiLCJoYXNPd25Qcm9wZXJ0eSIsIlFVRVJZIiwiU1VDQ0VTUyIsIkVSUk9SIiwiQkVHSU4iLCJVUERBVEUiLCJDT01NSVQiLCJDQU5DRUwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O1FBcUNnQkEsZSxHQUFBQSxlO1FBT0FDLGMsR0FBQUEsYztRQVFBQyxZLEdBQUFBLFk7Ozs7SUFwRFZDLFc7QUFDSix1QkFBWUMsSUFBWixFQUEwQjtBQUFBOztBQUN4QixTQUFLQyxLQUFMLEdBQWFELElBQWI7QUFDQSxRQUFJRSxTQUFTLEtBQUtELEtBQUwsR0FBYSxHQUExQjs7QUFGd0Isc0NBQUxFLEdBQUs7QUFBTEEsU0FBSztBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUd4QiwyQkFBZUEsR0FBZiw4SEFBb0I7QUFBQSxZQUFYQyxFQUFXOztBQUNsQixhQUFLQSxFQUFMLElBQVdGLFNBQVNFLEVBQXBCO0FBQ0Q7QUFMdUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQU16Qjs7Ozs0QkFDTztBQUNOLGFBQU9DLE9BQU9DLE1BQVAsQ0FBYyxJQUFJUCxXQUFKLENBQWdCLEtBQUtFLEtBQXJCLENBQWQsRUFBMkMsSUFBM0MsQ0FBUDtBQUNEOzs7NkJBQ2M7QUFBQSx5Q0FBTEUsR0FBSztBQUFMQSxXQUFLO0FBQUE7O0FBQ2IsVUFBSUEsSUFBSUksTUFBSixLQUFlLENBQW5CLEVBQXNCO0FBQ3BCLGVBQU8sSUFBUDtBQUNEO0FBQ0QsVUFBSUMsU0FBUyxLQUFLQyxLQUFMLEVBQWI7QUFDQSxVQUFJUCxTQUFTLEtBQUtELEtBQUwsR0FBYSxHQUExQjtBQUxhO0FBQUE7QUFBQTs7QUFBQTtBQU1iLDhCQUFlRSxHQUFmLG1JQUFvQjtBQUFBLGNBQVhDLEVBQVc7O0FBQ2xCSSxpQkFBT0osRUFBUCxJQUFhRixTQUFTRSxFQUF0QjtBQUNEO0FBUlk7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFTYixhQUFPSSxNQUFQO0FBQ0Q7Ozt5QkFDSUUsTSxFQUFRO0FBQ1gsVUFBSUEsTUFBSixFQUFZO0FBQ1YsWUFBSUYsU0FBUyxLQUFLQyxLQUFMLEVBQWI7QUFDQSxhQUFLLElBQUlFLEdBQVQsSUFBZ0JELE1BQWhCLEVBQXdCO0FBQ3RCLGNBQUlBLE9BQU9FLGNBQVAsQ0FBc0JELEdBQXRCLENBQUosRUFBZ0M7QUFDOUJILG1CQUFPRyxHQUFQLElBQWNELE9BQU9DLEdBQVAsQ0FBZDtBQUNEO0FBQ0Y7QUFDRCxlQUFPSCxNQUFQO0FBQ0QsT0FSRCxNQVFPO0FBQ0wsZUFBTyxJQUFQO0FBQ0Q7QUFDRjs7Ozs7O0FBR0ksU0FBU1osZUFBVCxDQUF5QkksSUFBekIsRUFBdUM7QUFBQSxxQ0FBTEcsR0FBSztBQUFMQSxPQUFLO0FBQUE7O0FBQzVDLDRDQUFXSixXQUFYLGlCQUF1QkMsSUFBdkIsR0FBZ0NHLEdBQWhDO0FBQ0Q7O0FBRU0sSUFBTVUsd0JBQVUsT0FBaEI7QUFDQSxJQUFNQyw0QkFBVSxTQUFoQjtBQUNBLElBQU1DLHdCQUFVLE9BQWhCO0FBQ0EsU0FBU2xCLGNBQVQsQ0FBd0JHLElBQXhCLEVBQXNDO0FBQUEscUNBQUxHLEdBQUs7QUFBTEEsT0FBSztBQUFBOztBQUMzQyw0Q0FBV0osV0FBWCxpQkFBdUJDLElBQXZCLEVBQTZCYSxLQUE3QixFQUFvQ0MsT0FBcEMsRUFBNkNDLEtBQTdDLEdBQXVEWixHQUF2RDtBQUNEOztBQUVNLElBQU1hLHdCQUFTLE9BQWY7QUFDQSxJQUFNQywwQkFBUyxRQUFmO0FBQ0EsSUFBTUMsMEJBQVMsUUFBZjtBQUNBLElBQU1DLDBCQUFTLFFBQWY7QUFDQSxTQUFTckIsWUFBVCxDQUFzQkUsSUFBdEIsRUFBb0M7QUFBQSxxQ0FBTEcsR0FBSztBQUFMQSxPQUFLO0FBQUE7O0FBQ3pDLDRDQUFXSixXQUFYLGlCQUF1QkMsSUFBdkIsRUFBNkJnQixLQUE3QixFQUFvQ0MsTUFBcEMsRUFBNENDLE1BQTVDLEVBQW9EQyxNQUFwRCxHQUErRGhCLEdBQS9EO0FBQ0QiLCJmaWxlIjoiYWN0aW9ucy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEFjdGlvbkdyb3VwIHtcclxuICBjb25zdHJ1Y3RvcihuYW1lLCAuLi5vcHMpIHtcclxuICAgIHRoaXMuX25hbWUgPSBuYW1lO1xyXG4gICAgbGV0IHByZWZpeCA9IHRoaXMuX25hbWUgKyAnLic7XHJcbiAgICBmb3IgKGxldCBvcCBvZiBvcHMpIHtcclxuICAgICAgdGhpc1tvcF0gPSBwcmVmaXggKyBvcDtcclxuICAgIH1cclxuICB9XHJcbiAgY2xvbmUoKSB7XHJcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihuZXcgQWN0aW9uR3JvdXAodGhpcy5fbmFtZSksIHRoaXMpO1xyXG4gIH1cclxuICBleHRlbmQoLi4ub3BzKSB7XHJcbiAgICBpZiAob3BzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuICAgIGxldCBjbG9uZWQgPSB0aGlzLmNsb25lKCk7XHJcbiAgICBsZXQgcHJlZml4ID0gdGhpcy5fbmFtZSArICcuJztcclxuICAgIGZvciAobGV0IG9wIG9mIG9wcykge1xyXG4gICAgICBjbG9uZWRbb3BdID0gcHJlZml4ICsgb3A7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gY2xvbmVkO1xyXG4gIH1cclxuICBiaW5kKHBhcmFtcykge1xyXG4gICAgaWYgKHBhcmFtcykge1xyXG4gICAgICBsZXQgY2xvbmVkID0gdGhpcy5jbG9uZSgpO1xyXG4gICAgICBmb3IgKHZhciBrZXkgaW4gcGFyYW1zKSB7XHJcbiAgICAgICAgaWYgKHBhcmFtcy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XHJcbiAgICAgICAgICBjbG9uZWRba2V5XSA9IHBhcmFtc1trZXldO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gY2xvbmVkO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gbWFrZUFjdGlvbkdyb3VwKG5hbWUsIC4uLm9wcykge1xyXG4gIHJldHVybiBuZXcgQWN0aW9uR3JvdXAobmFtZSwgLi4ub3BzKTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IFFVRVJZICAgPSAnUVVFUlknO1xyXG5leHBvcnQgY29uc3QgU1VDQ0VTUyA9ICdTVUNDRVNTJztcclxuZXhwb3J0IGNvbnN0IEVSUk9SICAgPSAnRVJST1InO1xyXG5leHBvcnQgZnVuY3Rpb24gbWFrZUFqYXhBY3Rpb24obmFtZSwgLi4ub3BzKSB7XHJcbiAgcmV0dXJuIG5ldyBBY3Rpb25Hcm91cChuYW1lLCBRVUVSWSwgU1VDQ0VTUywgRVJST1IsIC4uLm9wcyk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBCRUdJTiAgPSAnQkVHSU4nO1xyXG5leHBvcnQgY29uc3QgVVBEQVRFID0gJ1VQREFURSc7XHJcbmV4cG9ydCBjb25zdCBDT01NSVQgPSAnQ09NTUlUJztcclxuZXhwb3J0IGNvbnN0IENBTkNFTCA9ICdDQU5DRUwnO1xyXG5leHBvcnQgZnVuY3Rpb24gbWFrZVR4QWN0aW9uKG5hbWUsIC4uLm9wcykge1xyXG4gIHJldHVybiBuZXcgQWN0aW9uR3JvdXAobmFtZSwgQkVHSU4sIFVQREFURSwgQ09NTUlULCBDQU5DRUwsIC4uLm9wcyk7XHJcbn1cclxuIl19
